// Code generated by MockGen. DO NOT EDIT.
// Source: internal/core/state.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSyncState is a mock of SyncState interface.
type MockSyncState struct {
	ctrl     *gomock.Controller
	recorder *MockSyncStateMockRecorder
}

// MockSyncStateMockRecorder is the mock recorder for MockSyncState.
type MockSyncStateMockRecorder struct {
	mock *MockSyncState
}

// NewMockSyncState creates a new mock instance.
func NewMockSyncState(ctrl *gomock.Controller) *MockSyncState {
	mock := &MockSyncState{ctrl: ctrl}
	mock.recorder = &MockSyncStateMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSyncState) EXPECT() *MockSyncStateMockRecorder {
	return m.recorder
}

// GetName mocks base method.
func (m *MockSyncState) GetName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetName")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetName indicates an expected call of GetName.
func (mr *MockSyncStateMockRecorder) GetName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetName", reflect.TypeOf((*MockSyncState)(nil).GetName))
}
