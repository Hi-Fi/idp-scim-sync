// Code generated by MockGen. DO NOT EDIT.
// Source: internal/sync/repository.go

// Package sync is a generated GoMock package.
package sync

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSyncRepository is a mock of SyncRepository interface.
type MockSyncRepository struct {
	ctrl     *gomock.Controller
	recorder *MockSyncRepositoryMockRecorder
}

// MockSyncRepositoryMockRecorder is the mock recorder for MockSyncRepository.
type MockSyncRepositoryMockRecorder struct {
	mock *MockSyncRepository
}

// NewMockSyncRepository creates a new mock instance.
func NewMockSyncRepository(ctrl *gomock.Controller) *MockSyncRepository {
	mock := &MockSyncRepository{ctrl: ctrl}
	mock.recorder = &MockSyncRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSyncRepository) EXPECT() *MockSyncRepositoryMockRecorder {
	return m.recorder
}

// StoreGroups mocks base method.
func (m *MockSyncRepository) StoreGroups(gr *GroupsResult) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StoreGroups", gr)
	ret0, _ := ret[0].(error)
	return ret0
}

// StoreGroups indicates an expected call of StoreGroups.
func (mr *MockSyncRepositoryMockRecorder) StoreGroups(gr interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StoreGroups", reflect.TypeOf((*MockSyncRepository)(nil).StoreGroups), gr)
}

// StoreGroupsMembers mocks base method.
func (m *MockSyncRepository) StoreGroupsMembers(gr *GroupsMembersResult) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StoreGroupsMembers", gr)
	ret0, _ := ret[0].(error)
	return ret0
}

// StoreGroupsMembers indicates an expected call of StoreGroupsMembers.
func (mr *MockSyncRepositoryMockRecorder) StoreGroupsMembers(gr interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StoreGroupsMembers", reflect.TypeOf((*MockSyncRepository)(nil).StoreGroupsMembers), gr)
}

// StoreUsers mocks base method.
func (m *MockSyncRepository) StoreUsers(ur *UsersResult) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StoreUsers", ur)
	ret0, _ := ret[0].(error)
	return ret0
}

// StoreUsers indicates an expected call of StoreUsers.
func (mr *MockSyncRepositoryMockRecorder) StoreUsers(ur interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StoreUsers", reflect.TypeOf((*MockSyncRepository)(nil).StoreUsers), ur)
}
